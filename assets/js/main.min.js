"use strict";const toggleAttribute=(element,attribute,trueVal,falseVal)=>{void 0===trueVal&&(trueVal=!0),void 0===falseVal&&(falseVal=!1),element.getAttribute(attribute)!==trueVal?element.setAttribute(attribute,trueVal):element.setAttribute(attribute,falseVal)},menuToggle=(target,duration)=>{let initialParentHeight,finalParentHeight,menu,menuItems,transitionListener;const initialPositions=[],finalPositions=[];target&&(menu=target.closest(".menu-wrapper"),menuItems=menu.querySelectorAll(".menu-item"),menuItems.forEach((menuItem,index)=>{initialPositions[index]={x:menuItem.offsetLeft,y:menuItem.offsetTop}}),initialParentHeight=target.parentElement.offsetHeight,target.classList.add("toggling-target"),target.classList.toggle("active"),menuItems.forEach((menuItem,index)=>{finalPositions[index]={x:menuItem.offsetLeft,y:menuItem.offsetTop}}),finalParentHeight=target.parentElement.offsetHeight,target.classList.toggle("active"),menu.classList.add("is-toggling"),target.classList.toggle("active"),menuItems.forEach((menuItem,index)=>{const initialPosition=initialPositions[index];0===initialPosition.y&&menuItem.parentElement===target&&(initialPosition.y=initialParentHeight),menuItem.style.transform=`translate(${initialPosition.x}px, ${initialPosition.y}px)`}),requestAnimationFrame((function(){requestAnimationFrame((function(){menu.classList.add("is-animating"),menuItems.forEach((menuItem,index)=>{const finalPosition=finalPositions[index];0===finalPosition.y&&menuItem.parentElement===target&&(finalPosition.y=finalParentHeight),void 0!==duration&&(menuItem.style.transitionDuration=duration+"ms"),menuItem.style.transform=`translate(${initialPosition.x}px, ${initialPosition.y}px)`}),void 0!==duration&&(target.style.transitionDuration=duration+"ms")})),transitionListener=()=>{menu.classList.remove("is-animating"),menu.classList.remove("is-toggling"),target.classList.remove("toggling-target"),menuItems.forEach(menuItem=>{menuItem.style.transform="",menuItem.style.transitionDuration=""}),target.style.transitionDuration="",target.removeEventListener("transitionend",transitionListener)},target.addEventListener("transitionend",transitionListener)})))};class CoverModals{constructor(){document.querySelector(".cover-modal")&&(this.onToggle(),this.outsideUntoggle(),this.closeOnEscape(),this.hideAndShowModals())}onToggle(){document.querySelectorAll(".cover-modal").forEach(element=>{element.addEventListener("toggled",event=>{const modal=event.target,body=document.body;modal.classList.contains("active")?body.classList.add("showing-modal"):(body.classList.remove("showing-modal"),body.classList.add("hiding-modal"),setTimeout(()=>{body.classList.remove("hiding-modal")},500))})})}outsideUntoggle(){document.addEventListener("click",function(event){const target=event.target,modal=document.querySelector(".cover-modal.active");"a"===event.target.tagName.toLowerCase()&&event.target.hash.includes("#")&&null!==modal&&(this.untoggleModal(modal),setTimeout(()=>{const anchor=document.getElementById(event.target.hash.slice(1));anchor.scrollIntoView()},550)),target===modal&&this.untoggleModal(target)}.bind(this))}closeOnEscape(){document.addEventListener("keydown",function(event){27===event.keyCode&&(event.preventDefault(),document.querySelectorAll(".cover-modal.active").forEach(function(element){this.untoggleModal(element)}.bind(this)))}.bind(this))}hideAndShowModals(){const modals=document.querySelectorAll(".cover-modal"),htmlStyle=document.documentElement.style,adminBar=document.querySelector("#wpadminbar");function getAdminBarHeight(negativeValue){let height;const currentScroll=window.pageYOffset;return adminBar?(height=currentScroll+adminBar.getBoundingClientRect().height,negativeValue?-height:height):0===currentScroll?0:-currentScroll}function htmlStyles(){var overflow;return{"overflow-y":window.innerHeight>document.documentElement.getBoundingClientRect().height?"hidden":"scroll",position:"fixed",width:"100%",top:getAdminBarHeight(!0)+"px",left:0}}modals.forEach((function(modal){modal.addEventListener("toggle-target-before-inactive",(function(event){const styles=htmlStyles(),offsetY=window.pageYOffset,paddingTop=Math.abs(getAdminBarHeight())-offsetY+"px",mQuery=window.matchMedia("(max-width: 600px)");event.target===modal&&(Object.keys(styles).forEach(styleKey=>{htmlStyle.setProperty(styleKey,styles[styleKey])}),window.twentytwenty.scrolled=parseInt(styles.top,10),adminBar&&(document.body.style.setProperty("padding-top",paddingTop),mQuery.matches&&(offsetY>=getAdminBarHeight()?modal.style.setProperty("top",0):modal.style.setProperty("top",getAdminBarHeight()-offsetY+"px"))),modal.classList.add("show-modal"))})),modal.addEventListener("toggle-target-after-inactive",event=>{event.target===modal&&setTimeout(()=>{var clickedEl=twentytwenty.toggles.clickedEl;modal.classList.remove("show-modal"),Object.keys(htmlStyles()).forEach(styleKey=>{htmlStyle.removeProperty(styleKey)}),adminBar&&(document.body.style.removeProperty("padding-top"),modal.style.removeProperty("top")),!1!==clickedEl&&(clickedEl.focus(),clickedEl=!1),window.scrollTo(0,Math.abs(window.twentytwenty.scrolled+getAdminBarHeight())),window.twentytwenty.scrolled=0},500)})}))}untoggleModal(modal){let modalTargetClass,modalToggle=!1;modal.dataset.modalTargetString&&(modalTargetClass=modal.dataset.modalTargetString,modalToggle=document.querySelector('*[data-toggle-target="'+modalTargetClass+'"]')),modalToggle?modalToggle.click():modal.classList.remove("active")}}class Toggles{clickedEl=!1;constructor(){this.toggle(),this.resizeCheck(),this.untoggleOnEscapeKeyPress()}performToggle(element){let target,timeOutTime,classToToggle;const toggle=element,targetString=toggle.dataset.toggleTarget,activeClass="active";document.querySelectorAll(".show-modal").length||(this.clickedEl=document.activeElement),target="next"===targetString?toggle.nextSibling:document.querySelector(targetString),target.classList.contains("active")?target.dispatchEvent(new Event("toggle-target-before-active")):target.dispatchEvent(new Event("toggle-target-before-inactive")),classToToggle=toggle.dataset.classToToggle||"active",timeOutTime=0,target.classList.contains("cover-modal")&&(timeOutTime=10),setTimeout(()=>{let focusElement;const newTarget=target.classList.contains("sub-menu")?toggle.closest(".menu-item").querySelector(".sub-menu"):target,duration=toggle.dataset.toggleDuration;"slidetoggle"!==toggle.dataset.toggleType||instantly||"0"===duration?newTarget.classList.toggle(classToToggle):menuToggle(newTarget,duration),"next"===targetString?toggle.classList.toggle("active"):target.classList.contains("sub-menu")?toggle.classList.toggle("active"):document.querySelector('*[data-toggle-target="'+targetString+'"]').classList.toggle("active"),toggleAttribute(toggle,"aria-expanded","true","false"),this.clickedEl&&-1!==toggle.getAttribute("class").indexOf("close-")&&toggleAttribute(this.clickedEl,"aria-expanded","true","false"),toggle.dataset.toggleBodyClass&&document.body.classList.toggle(toggle.dataset.toggleBodyClass),toggle.dataset.setFocus&&(focusElement=document.querySelector(toggle.dataset.setFocus),focusElement&&(target.classList.contains("active")?focusElement.focus():focusElement.blur())),target.dispatchEvent(new Event("toggled")),target.classList.contains("active")?target.dispatchEvent(new Event("toggle-target-after-active")):target.dispatchEvent(new Event("toggle-target-after-inactive"))},timeOutTime)}toggle(){document.querySelectorAll("*[data-toggle-target]").forEach(element=>{element.addEventListener("click",event=>{event.preventDefault(),this.performToggle(element)})})}resizeCheck(){document.querySelectorAll("*[data-untoggle-above], *[data-untoggle-below], *[data-toggle-above], *[data-toggle-below]").length&&window.addEventListener("resize",()=>{const winWidth=window.innerWidth,toggles=document.querySelectorAll(".toggle");toggles.forEach(toggle=>{const unToggleAbove=toggle.dataset.untoggleAbove,unToggleBelow=toggle.dataset.untoggleBelow,toggleAbove=toggle.dataset.toggleAbove,toggleBelow=toggle.dataset.toggleBelow;(unToggleAbove||unToggleBelow||toggleAbove||toggleBelow)&&((unToggleAbove&&winWidth>unToggleAbove||unToggleBelow&&winWidth<unToggleBelow)&&toggle.classList.contains("active")||(toggleAbove&&winWidth>toggleAbove||toggleBelow&&winWidth<toggleBelow)&&!toggle.classList.contains("active"))&&toggle.click()})})}untoggleOnEscapeKeyPress(){document.addEventListener("keyup",event=>{"Escape"===event.key&&document.querySelectorAll("*[data-untoggle-on-escape].active").forEach(element=>{element.classList.contains("active")&&element.click()})})}}document.addEventListener("DOMContentLoaded",()=>{new Toggles,new CoverModals});
//# sourceMappingURL=main.min.js.map